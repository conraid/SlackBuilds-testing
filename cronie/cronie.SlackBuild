#!/bin/bash
#
# Slackware build script for cronie
#
# Copyright 2025 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -euo pipefail
cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=cronie
PKGNAM=${PRGNAM,,}
SRCVERSION=1.7.2
VERSION="${SRCVERSION//-/_}"
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="AUTHORS COPYING* ChangeLog INSTALL NEWS README*"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz "
  exit 0
fi

if [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=pentium4 -mtune=generic"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -march=x86-64 -mtune=generic -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$SRCVERSION
tar xvf $CWD/$PRGNAM-$SRCVERSION.tar.gz
cd $PRGNAM-$SRCVERSION

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;


# Apply patches
if [ -e $CWD/patches/ ]; then
  if [ -e $CWD/patches/series ]; then
    for PATCH in $(cat $CWD/patches/series); do
      patch -p1 -i $CWD/patches/$PATCH
    done
  else
    for PATCH in $CWD/patches/*.patch; do
      patch -p1 -i $PATCH
    done
  fi
fi

LDFLAGS="-L/usr/lib${LIBDIRSUFFIX}" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --runstatedir=/run \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/$PKGNAM-$VERSION \
  --enable-anacron \
  --with-pam \
  --with-inotify \
  --host=$ARCH-slackware-linux \
  --build=$ARCH-slackware-linux

make
make DESTDIR=$PKG install

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG -print0 | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# For this section thanks to SBo and Archlinux
mkdir -p $PKG/etc/cron.{d,hourly,daily,weekly,monthly}
chmod u+s $PKG/usr/bin/crontab
install -d -m700 $PKG/var/spool/{ana,}cron/
install -Dm644 crond.sysconfig $PKG/etc/sysconfig/crond
install -Dm644 contrib/anacrontab $PKG/etc/anacrontab
install -Dm644 contrib/0hourly $PKG/etc/cron.d/0hourly
install -Dm755 contrib/0anacron $PKG/etc/cron.hourly/0anacron
install -Dm644 pam/crond $PKG/etc/pam.d/crond
install -Dm644 $CWD/files/cron.deny $PKG/etc/cron.deny.new
install -Dm644 $CWD/files/crontab $PKG/etc/crontab.new
install -Dm755 $CWD/files/run-parts -t $PKG/usr/bin
install -Dm644 $CWD/files/run-parts.8.gz -t $PKG/usr/man/man8
install -Dm600 $CWD/files/crontab.root $PKG/var/spool/cron/root.new
install -Dm644 $CWD/files/crond.default $PKG/etc/default/crond.new
install -Dm755 $CWD/files/rc.crond $PKG/etc/rc.d/rc.crond.new
install -Dm644 $CWD/files/default-anacron $PKG/etc/default/anacron.new


mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc


cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
